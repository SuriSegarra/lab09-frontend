{"version":3,"sources":["assets/logo1.png","components/WeedItem.js","components/List.js","components/Home.js","components/Createweed.js","components/Updateweed.js","components/Detail.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","weedItem","weed","this","props","className","strain","src","imgurl","alt","type","thc","Component","List","state","request","get","data","console","log","body","setState","id","map","to","myImage","Home","Createweed","types","inddor","outdoor","componentDidMount","a","handleNameChange","e","target","value","handleTypeChange","Number","handleSmellChange","smell","handleTHCChange","handleOutDoor","actualBool","handleIndoor","indoor","handleImageChange","imgUrl","handleSubmit","preventDefault","NewWeed","typeId","put","dbWeed","history","push","onSubmit","onChange","name","Updateweed","match","params","weedToUpdate","type_id","handleDelete","delete","newWeed","onClick","style","background","marginTop","Detail","singleWeed","App","exact","path","component","UpdateWeed","Boolean","window","location","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"kFAAAA,EAAOC,QAAU,IAA0B,mC,wOCEtBC,E,iLACP,IACEC,EAASC,KAAKC,MAAdF,KACR,OACA,yBAAKG,UAAU,aACX,wBAAIA,UAAU,aACV,wBAAIA,UAAU,UAAd,IAAyBH,EAAKI,QAC9B,yBAAKC,IAAKL,EAAKM,OAAQC,IAAI,KAC3B,qCAAWP,EAAKQ,MAChB,oCAAUR,EAAKS,IAAf,Y,GATsBC,aCMjBC,E,2MAEjBC,MAAQ,CACJZ,KAAM,I,mNALYa,IAAQC,IAAR,oD,OASZC,E,OACNC,QAAQC,IAAIF,EAAKG,MACjBjB,KAAKkB,SAAS,CACVnB,KAAMe,EAAKG,O,qIAMf,OACI,6BACI,wBAAIf,UAAU,WAAd,YACH,wBAAIiB,GAAG,aAEDnB,KAAKW,MAAMZ,KAAKqB,KAAI,SAAArB,GAAI,OACvB,kBAAC,IAAD,CAAMsB,GAAE,kBAAatB,EAAKoB,KAC1B,kBAAC,EAAD,CAAUpB,KAAMA,c,GAvBFU,a,iBCJlCM,QAAQC,IAAIM,K,IAESC,E,iLAEb,OACI,6BACI,kBAAC,IAAD,CAAMrB,UAAU,YAAYmB,GAAG,SAA/B,YACA,6BACH,yBAAKnB,UAAU,WAAWE,IAAKkB,IAAShB,IAAI,U,GANvBG,aCJbe,E,2MACjBb,MAAQ,CACJc,MAAO,GACPC,QAAQ,EACRC,SAAS,EACTpB,KAAM,G,EAEVqB,kB,sBAAoB,4BAAAC,EAAA,sEACIjB,IAAQC,IAAI,qDADhB,OACVY,EADU,OAGhB,EAAKP,SAAS,CAACO,MAAOA,EAAMR,OAHZ,2C,EAKpBa,iBAAmB,SAACC,GAChB,EAAKb,SAAS,CAAEf,OAAQ4B,EAAEC,OAAOC,S,EAErCC,iBAAmB,SAACH,GAChBhB,QAAQC,IAAIe,EAAEC,OAAOC,OACrB,EAAKf,SAAS,CAAEX,KAAM4B,OAAOJ,EAAEC,OAAOC,U,EAE1CG,kBAAoB,SAACL,GACjB,EAAKb,SAAS,CAAEmB,MAAON,EAAEC,OAAOC,S,EAEpCK,gBAAkB,SAACP,GACf,EAAKb,SAAS,CAACV,IAAK2B,OAAOJ,EAAEC,OAAOC,U,EAExCM,cAAgB,SAACR,GACb,IAAMS,EAAgC,UAAnBT,EAAEC,OAAOC,MAG5B,EAAKf,SAAS,CAAES,QAASa,K,EAE7BC,aAAe,SAACV,GACZ,IAAMS,EAAgC,UAAnBT,EAAEC,OAAOC,MAG5B,EAAKf,SAAS,CAAEwB,OAAQF,K,EAE5BG,kBAAoB,SAACZ,GACjB,EAAKb,SAAS,CAAE0B,OAAQb,EAAEC,OAAOC,S,EAErCY,a,uCAAe,WAAOd,GAAP,iBAAAF,EAAA,6DACXE,EAAEe,iBACIC,EAAU,CACZ5C,OAAQ,EAAKQ,MAAMR,OACnBuC,OAAQ,EAAK/B,MAAM+B,OACnBf,QAAS,EAAKhB,MAAMgB,QACpBU,MAAO,EAAK1B,MAAM0B,MAClBO,OAAQ,EAAKjC,MAAMiC,OACnBI,OAAQ,EAAKrC,MAAMJ,KACnBC,IAAK,EAAKG,MAAMH,KATT,SAYUI,IAAQqC,IAAI,oDAAqDF,GAZ3E,OAYLG,EAZK,OAcXnC,QAAQC,IAAIkC,GACZ,EAAKjD,MAAMkD,QAAQC,KAAK,KAfb,2C,8HAmBX,OACI,6BACI,0BAAMC,SAAUrD,KAAK6C,cAArB,cAEI,uCAEI,2BAAOS,SAAUtD,KAAK8B,oBAE1B,uCAEI,4BAAQwB,SAAUtD,KAAKkC,kBAClBlC,KAAKW,MAAMc,MAAML,KAAI,SAAAb,GAAI,OAAI,4BAAQ0B,MAAO1B,EAAKY,IAC7CZ,EAAKgD,WAIlB,sCAEI,2BAAOhD,KAAK,SAAS+C,SAAUtD,KAAKsC,mBAEpC,wCAEI,2BAAOgB,SAAUtD,KAAK2C,qBAE1B,yCAEI,4BAAQW,SAAUtD,KAAKyC,cACnB,4BAAQR,MAAM,QAAd,QACA,4BAAQA,MAAM,SAAd,WAGR,0CAEI,4BAAQqB,SAAUtD,KAAKuC,eACnB,4BAAQN,MAAM,QAAd,QACA,4BAAQA,MAAM,SAAd,WAGR,uCAEI,2BAAOqB,SAAUtD,KAAKoC,qBAE1B,gD,GArGgB3B,aCEnB+C,E,2MACjB7C,MAAQ,CACJc,MAAO,I,EAEfG,kB,sBAAoB,gCAAAC,EAAA,sEACIjB,IAAQC,IAAR,qDADJ,cACVY,EADU,OAGhB,EAAKP,SAAS,CAAEO,MAAOA,EAAMR,OAHb,SAKGL,IAAQC,IAAR,4DAAiE,EAAKZ,MAAMwD,MAAMC,OAAOvC,KAL5F,OAKVpB,EALU,OAOV4D,EAAe5D,EAAKkB,KAAK,GAE/B,EAAKC,SAAS,CACVf,OAAQwD,EAAaxD,OACrBuC,OAAQiB,EAAajB,OACrBf,QAASgC,EAAahC,QACtBnB,IAAKmD,EAAanD,IAClBoC,OAAQe,EAAatD,OACrBuD,QAASD,EAAaC,QACtBvB,MAAOsB,EAAatB,QAhBR,2C,EAoBhBP,iBAAmB,SAACC,GAChB,EAAKb,SAAS,CAAEf,OAAQ4B,EAAEC,OAAOC,S,EAErCC,iBAAmB,SAACH,GAChB,EAAKb,SAAS,CAAEX,KAAM4B,OAAOJ,EAAEC,OAAOC,U,EAE1CG,kBAAoB,SAACL,GACjB,EAAKb,SAAS,CAAEmB,MAAON,EAAEC,OAAOC,S,EAEpCK,gBAAkB,SAACP,GACf,EAAKb,SAAS,CAACV,IAAK2B,OAAOJ,EAAEC,OAAOC,U,EAExCM,cAAgB,SAACR,GACb,IAAMS,EAAgC,UAAnBT,EAAEC,OAAOC,MAG5B,EAAKf,SAAS,CAAES,QAASa,K,EAE7BC,aAAe,SAACV,GACZ,IAAMS,EAAgC,UAAnBT,EAAEC,OAAOC,MAG5B,EAAKf,SAAS,CAAEwB,OAAQF,K,EAE5BG,kBAAoB,SAACZ,GACjB,EAAKb,SAAS,CAAE0B,OAAQb,EAAEC,OAAOC,S,EAErC4B,a,sBAAe,sBAAAhC,EAAA,sEACLjB,IAAQkD,OAAR,4DAAoE,EAAK7D,MAAMwD,MAAMC,OAAOvC,KADvF,OAGX,EAAKlB,MAAMkD,QAAQC,KAAK,KAHb,2C,EAMfP,a,uCAAe,WAAOd,GAAP,iBAAAF,EAAA,6DAEXE,EAAEe,iBAEIiB,EAAU,CACZ5D,OAAQ,EAAKQ,MAAMR,OACnBuC,OAAQ,EAAK/B,MAAM+B,OACnBf,QAAS,EAAKhB,MAAMgB,QACpBU,MAAO,EAAK1B,MAAM0B,MAClBO,OAAQ,EAAKjC,MAAMiC,OACnBgB,QAAS,EAAKjD,MAAMiD,QACpBpD,IAAK,EAAKG,MAAMH,IAChBW,GAAIgB,OAAO,EAAKlC,MAAMwD,MAAMC,OAAOvC,KAZ5B,SAeUP,IAAQqC,IAAR,oDAAiEc,GAf3E,OAeLb,EAfK,OAiBXnC,QAAQC,IAAIkC,GAEZ,EAAKjD,MAAMkD,QAAQC,KAAK,KAnBb,2C,8HAuBX,OACI,6BACK,0BAAMC,SAAUrD,KAAK6C,cAArB,cAEG,uCAEI,2BAAOS,SAAUtD,KAAK8B,oBAE1B,uCAEI,4BAAQwB,SAAUtD,KAAKkC,kBAClBlC,KAAKW,MAAMc,MAAML,KAAI,SAAAb,GAAI,OAAI,4BAAQ0B,MAAO1B,EAAKY,IAC7CZ,EAAKgD,WAIlB,sCAEI,2BAAOhD,KAAK,SAAS+C,SAAUtD,KAAKsC,mBAEpC,wCAEI,2BAAOgB,SAAUtD,KAAK2C,qBAE1B,yCAEI,4BAAQW,SAAUtD,KAAKyC,cACnB,4BAAQR,MAAM,QAAd,QACA,4BAAQA,MAAM,SAAd,WAGR,0CAEI,4BAAQqB,SAAUtD,KAAKuC,eACnB,4BAAQN,MAAM,QAAd,QACA,4BAAQA,MAAM,SAAd,WAGR,uCAEI,2BAAOqB,SAAUtD,KAAKoC,qBAE1B,2CAGR,4BAAQ4B,QAAUhE,KAAK6D,aACvBI,MAAO,CAACC,WAAW,MAAOC,UAAU,MADpC,e,GA7HwB1D,aCKnB2D,E,2MAEjBzD,MAAQ,CAAEZ,KAAM,I,EAEhB6B,kB,sBAAoB,4BAAAC,EAAA,sEACKjB,IAAQC,IAAR,4DAAiE,EAAKZ,MAAMwD,MAAMC,OAAOvC,KAD9F,QACdkD,EADc,QAIFpD,MACV,EAAKC,SAAS,CAAEnB,KAAMsE,EAAWpD,KAAK,KAG1CF,QAAQC,IAAIqD,EAAWpD,MARP,2C,wEAWV,IACGlB,EAASC,KAAKW,MAAdZ,KAET,OADCgB,QAAQC,IAAIjB,GAET,yBAAKG,UAAU,mBACZ,kBAAC,EAAD,CAAUH,KAAOA,IACjB,kBAAC,IAAD,CAAMsB,GAAE,kBAAatB,EAAKoB,KAA1B,e,GArBqBV,aCIf6D,E,iLAEjB,OAEI,kBAAC,IAAD,KAIE,kBAAC,IAAD,KAGE,kBAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,QAAQC,UAAW/D,IACrC,kBAAC,IAAD,CAAO6D,OAAK,EAACC,KAAK,OAAOC,UAAWjD,IACpC,kBAAC,IAAD,CAAO+C,OAAK,EAACC,KAAK,cAAcC,UAAWC,IAE3C,kBAAC,IAAD,CAAOH,OAAK,EAACC,KAAK,IAAIC,UAAWlD,IACjC,kBAAC,IAAD,CAAOgD,OAAK,EAACC,KAAK,cAAcC,UAAWL,U,GAhBtB3D,aCDbkE,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASrB,MACvB,2DCZNsB,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,SD6H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACL3E,QAAQ2E,MAAMA,EAAMC,c","file":"static/js/main.13bdec10.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo1.2b5d84cd.png\";","import React, { Component } from 'react'\n\nexport default class weedItem extends Component {\n    render() {\n        const { weed } = this.props;\n        return (\n        <div className='card-item'>\n            <li className='weed-item'> \n                <h2 className='strain'> {weed.strain}</h2>\n                <img src={weed.imgurl} alt=''/>\n                <p> Type: {weed.type}</p>\n                <p> THC: {weed.thc} %</p>\n                \n            </li>\n\n        </div>\n        )\n    }\n}\n","import React, { Component } from 'react'\nimport request from 'superagent';\nimport { Link } from 'react-router-dom';\nimport WeedItem from './WeedItem.js';\n\n\nconst getWeedList = () => request.get(`http://weed-fullstack-lab.herokuapp.com/api/weed`);\n\nexport default class List extends Component {\n\n    state = {\n        weed: [],\n    }\n\n    async componentDidMount() {\n        const data = await getWeedList()\n        console.log(data.body);\n        this.setState({\n            weed: data.body\n        })\n        \n    }\n\n    render() {\n        return (\n            <div>\n                <h1 className='list-h1'>Products</h1>\n             <ul id='weed-list'>\n               {\n                   this.state.weed.map(weed =>\n                    <Link to={`/detail/${weed.id}`}>\n                    <WeedItem weed={weed}/>\n                    </Link>\n                   )\n               }\n           </ul>\n\n            </div>\n        );\n    }\n}\n","import React, { Component } from 'react'\nimport myImage from '../assets/logo1.png';\nimport { Link } from 'react-router-dom';\n\nconsole.log(myImage);\n\nexport default class Home extends Component {\n    render() {\n        return (\n            <div>\n                <Link className='weed-link' to='/list'>Products</Link>\n                <h1></h1>\n             <img className='home-img' src={myImage} alt=''/>\n             \n            </div>\n        );\n    }\n}\n","import React, { Component } from 'react'\nimport request from 'superagent';\nexport default class Createweed extends Component {\n    state = {\n        types: [],\n        inddor: false,\n        outdoor: true,\n        type: 1,\n    };\n    componentDidMount = async () => {\n        const types = await request.get('https://weed-fullstack-lab.herokuapp.com/api/type')\n\n        this.setState({types: types.body});\n    }\n    handleNameChange = (e) => {\n        this.setState({ strain: e.target.value})\n    }\n    handleTypeChange = (e) => {\n        console.log(e.target.value)\n        this.setState({ type: Number(e.target.value) })\n    }\n    handleSmellChange = (e) => {\n        this.setState({ smell: e.target.value})\n    }\n    handleTHCChange = (e) => {\n        this.setState({thc: Number(e.target.value)} )\n    }\n    handleOutDoor = (e) => {\n        const actualBool = e.target.value === 'false'\n        ? false\n        : true\n        this.setState({ outdoor: actualBool })\n    }\n    handleIndoor = (e) => {\n        const actualBool = e.target.value === 'false'\n        ? false\n        : true\n        this.setState({ indoor: actualBool })\n    }\n    handleImageChange = (e) =>{\n        this.setState({ imgUrl: e.target.value })\n    }\n    handleSubmit = async (e) => {\n        e.preventDefault();\n        const NewWeed = {\n            strain: this.state.strain,\n            indoor: this.state.indoor,\n            outdoor: this.state.outdoor,\n            smell: this.state.smell,\n            imgUrl: this.state.imgUrl,\n            typeId: this.state.type,\n            thc: this.state.thc,\n\n        }\n        const dbWeed = await request.put('https://weed-fullstack-lab.herokuapp.com/api/weed', NewWeed)\n\n        console.log(dbWeed)\n        this.props.history.push('/');\n    }\n\n    render() {\n        return (\n            <div>\n                <form onSubmit={this.handleSubmit}>\n                    Add Product\n                    <label>\n                        Name:\n                        <input onChange={this.handleNameChange}/>\n                    </label>\n                    <label>\n                        Type:\n                        <select onChange={this.handleTypeChange}>\n                            {this.state.types.map(type => <option value={type.id}>\n                                {type.name}\n                            </option>)}\n                        </select>\n                    </label>\n                    <label>\n                        THC:\n                        <input type='number' onChange={this.handleTHCChange}/>\n                    </label>\n                        <label>\n                            Image:\n                            <input onChange={this.handleImageChange}/>\n                        </label>\n                        <label>\n                            Indoor:\n                            <select onChange={this.handleIndoor}>\n                                <option value='true'>True</option>\n                                <option value='false'>False</option>\n                            </select>\n                        </label>\n                        <label>\n                            Outdoor:\n                            <select onChange={this.handleOutDoor}>\n                                <option value='true'>True</option>\n                                <option value='false'>False</option>\n                            </select>\n                        </label>\n                        <label>\n                            Smell\n                            <input onChange={this.handleSmellChange}></input>\n                        </label>\n                        <button>Submit</button>\n                </form>\n            </div>\n        )\n    }\n}\n","import React, { Component } from 'react'\nimport request from 'superagent';\n\n\nexport default class Updateweed extends Component {\n    state = {\n        types: [],\n    };\ncomponentDidMount = async () => {\n    const types = await request.get(`https://weed-fullstack-lab.herokuapp.com/api/type`)\n\n    this.setState({ types: types.body })\n    \n    const weed = await request.get(`https://weed-fullstack-lab.herokuapp.com/api/weed/${this.props.match.params.id}`)\n\n    const weedToUpdate = weed.body[0];\n\n    this.setState({\n        strain: weedToUpdate.strain,\n        indoor: weedToUpdate.indoor,\n        outdoor: weedToUpdate.outdoor,\n        thc: weedToUpdate.thc,\n        imgUrl: weedToUpdate.imgurl,\n        type_id: weedToUpdate.type_id, \n        smell: weedToUpdate.smell\n    });\n\n}\n    handleNameChange = (e) => {\n        this.setState({ strain: e.target.value })\n    }\n    handleTypeChange = (e) => {\n        this.setState({ type: Number(e.target.value) })\n    }\n    handleSmellChange = (e) => {\n        this.setState({ smell: e.target.value })\n    }\n    handleTHCChange = (e) => {\n        this.setState({thc: Number(e.target.value)} )\n    }\n    handleOutDoor = (e) => {\n        const actualBool = e.target.value === 'false'\n        ? false\n        : true\n        this.setState({ outdoor: actualBool })\n    }\n    handleIndoor = (e) => {\n        const actualBool = e.target.value === 'false'\n        ? false\n        : true\n        this.setState({ indoor: actualBool })\n    }\n    handleImageChange = (e) =>{\n        this.setState({ imgUrl: e.target.value })\n    }\n    handleDelete = async () => {\n        await request.delete(`https://weed-fullstack-lab.herokuapp.com/api/weed/${this.props.match.params.id}`)\n\n        this.props.history.push('/');\n    }\n    \n    handleSubmit = async (e) => {\n        \n        e.preventDefault();\n\n        const newWeed = {\n            strain: this.state.strain,\n            indoor: this.state.indoor,\n            outdoor: this.state.outdoor,\n            smell: this.state.smell,\n            imgUrl: this.state.imgUrl,\n            type_id: this.state.type_id,\n            thc: this.state.thc,\n            id: Number(this.props.match.params.id),\n        \n        }\n        const dbWeed = await request.put(`https://weed-fullstack-lab.herokuapp.com/api/weed`, newWeed);\n\n        console.log(dbWeed)\n\n        this.props.history.push('/');\n    }\n\n    render() {\n        return (\n            <div>\n                 <form onSubmit={this.handleSubmit}>\n                    Add Product\n                    <label>\n                        Name:\n                        <input onChange={this.handleNameChange}/>\n                    </label>\n                    <label>\n                        Type:\n                        <select onChange={this.handleTypeChange}>\n                            {this.state.types.map(type => <option value={type.id}>\n                                {type.name}\n                            </option>)}\n                        </select>\n                    </label>\n                    <label>\n                        THC:\n                        <input type='number' onChange={this.handleTHCChange}/>\n                    </label>\n                        <label>\n                            Image:\n                            <input onChange={this.handleImageChange}/>\n                        </label>\n                        <label>\n                            Indoor:\n                            <select onChange={this.handleIndoor}>\n                                <option value='true'>True</option>\n                                <option value='false'>False</option>\n                            </select>\n                        </label>\n                        <label>\n                            Outdoor:\n                            <select onChange={this.handleOutDoor}>\n                                <option value='true'>True</option>\n                                <option value='false'>False</option>\n                            </select>\n                        </label>\n                        <label>\n                            Smell\n                            <input onChange={this.handleSmellChange}></input>\n                        </label>\n                        <button>Submit</button>\n                </form>\n\n                <button onClick={ this.handleDelete}\n                style={{background:'red', marginTop:100}}>DELETE</button>\n            </div>\n        )\n    }\n}\n","import React, { Component } from 'react'\nimport request from 'superagent';\nimport WeedItem from './WeedItem.js';\nimport { Link } from 'react-router-dom';\nimport Updateweed from './Updateweed.js';\n// const getWeed = (weedId) => request.get(`https://weed-fullstack-lab.herokuapp.com/api/weed/?${weedId}`);\n\n\n\nexport default class Detail extends Component {\n\n    state = { weed: {} }\n\n    componentDidMount = async () => {\n    const singleWeed = await request.get(`https://weed-fullstack-lab.herokuapp.com/api/weed/${this.props.match.params.id}`)\n\n\n        if(singleWeed.body) {\n            this.setState({ weed: singleWeed.body[0] })\n        }\n\n        console.log(singleWeed.body);\n    }\n\n    render() {\n         const { weed } = this.state;\n         console.log(weed);\n        return (\n            <div className='weed-detail-div'>\n               <WeedItem weed={ weed } />\n               <Link to={`/update/${weed.id}`}>Update</Link>\n               \n            </div>\n        )\n    }\n}\n","import React, { Component } from 'react'\nimport {\n  Route, \n  Switch,\n  BrowserRouter as Router,\n} from 'react-router-dom';\nimport List from './components/List.js'\nimport Home from './components/Home.js';\nimport Createweed from './components/Createweed.js';\nimport Detail from './components/Detail.js';\nimport UpdateWeed from './components/Updateweed.js';\n\n\nexport default class App extends Component {\n  render() {\n    return (\n      \n        <Router>\n          {/* <Link to='/'>HomePage </Link> */}\n          \n          \n          <Switch>\n            {/* this is your home route */}\n\n            <Route exact path='/list' component={List}/>\n            <Route exact path='/add' component={Createweed}/>\n            <Route exact path='/update/:id' component={UpdateWeed}/>\n            {/* home esta abajo de list porque va solo leer / solo y no la L desoues de el / de list */}\n            <Route exact path='/' component={Home}/>\n            <Route exact path='/detail/:id' component={Detail}/>\n          </Switch>\n        </Router>\n      \n    );\n  }\n}\n\n\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}